/*
 * MIT License
 *
 * Copyright (c) 2024 Riko Torun, Artur Rausch, Lennart Köhler, Moritz Wiedemann, Tim Stöcker, Souren Ishkhanian
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

package structra.assignment.framework.llm.context;

import lombok.NonNull;
import structra.assignment.framework.llm.MachineLearningModel;
import structra.assignment.framework.llm.model.ChatGPTModel;

/**
 * Enum representing roles in the chat system.
 *
 * <p>The roles include:
 *
 * <ul>
 *   <li><strong>USER:</strong> Represents input by a user.
 *   <li><strong>MODEL:</strong> Represents an indicator to information about the model itself
 *   <li><strong>SYSTEM:</strong> Represents messages generated by the system.
 *   <li><strong>SYSTEM:</strong> Represents output by the LLM (Large Language Model).
 * </ul>
 *
 * @author Riko Torun
 * @author Artur Rausch
 * @author Lennart Köhler
 * @see MachineLearningModel
 * @see ChatGPTModel
 */
public enum LLMRole {
    USER,
    MODEL,
    SYSTEM,
    ASSISTANT;

    @Override
    @NonNull
    public String toString() {
        return super.toString().toLowerCase();
    }
}
